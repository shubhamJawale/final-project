package com.project.pojos;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

@Entity
public class Work {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private int WorkId;
	private String title;
	private String description;
	private Date startingDate;
	private int expectedDuration;
	private double expectedAmount;
	private String status;
	// foreign key
	
	// user 
	@ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST,
			CascadeType.REFRESH })
	@JoinColumn(name="UserId")
	private User user;
	
	@OneToOne(mappedBy = "work", fetch = FetchType.LAZY, cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
	
	private AssignedWork assignedWork;
	
	
	@OneToMany(mappedBy = "work", fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	private List<Bidding> biddingList;


	public Work() {
		super();
	
	}

	public Work(int workId, String title, String description, Date startingDate, int expectedDuration,
			double expectedAmount, String status, User user) {
		super();
		WorkId = workId;
		this.title = title;
		this.description = description;
		this.startingDate = startingDate;
		this.expectedDuration = expectedDuration;
		this.expectedAmount = expectedAmount;
		this.status = status;
		this.user = user;
	}


	public int getWorkId() {
		return WorkId;
	}


	public void setWorkId(int workId) {
		WorkId = workId;
	}


	public String getTitle() {
		return title;
	}


	public void setTitle(String title) {
		this.title = title;
	}


	public String getDescription() {
		return description;
	}


	public void setDescription(String description) {
		this.description = description;
	}


	public Date getStartingDate() {
		return startingDate;
	}


	public void setStartingDate(Date startingDate) {
		this.startingDate = startingDate;
	}


	public int getExpectedDuration() {
		return expectedDuration;
	}


	public void setExpectedDuration(int expectedDuration) {
		this.expectedDuration = expectedDuration;
	}


	public double getExpectedAmount() {
		return expectedAmount;
	}


	public void setExpectedAmount(double expectedAmount) {
		this.expectedAmount = expectedAmount;
	}


	public String getStatus() {
		return status;
	}


	public void setStatus(String status) {
		this.status = status;
	}

	@JsonIgnoreProperties
	public User getUser() {
		return user;
	}

	@JsonProperty
	public void setUser(User user) {
		this.user = user;
	}

	@JsonIgnoreProperties
	public AssignedWork getAssignedWork() {
		return assignedWork;
	}

	@JsonProperty
	public void setAssignedWork(AssignedWork assignedWork) {
		this.assignedWork = assignedWork;
	}


	public List<Bidding> getBiddingList() {
		return biddingList;
	}


	public void setBiddingList(List<Bidding> biddingList) {
		this.biddingList = biddingList;
	}

	

	
	
}
