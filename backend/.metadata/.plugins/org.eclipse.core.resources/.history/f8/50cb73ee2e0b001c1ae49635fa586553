package com.project.pojos;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;

@Entity
public class Bidding {

	@Id
	@Column(name="biddingId")
	@GeneratedValue(strategy = GenerationType.AUTO)
	private int biddingId;
	private String description;
	private double amount;
	private int duration;
//mappedBy = "Bidding",
	// foriegn key
	
	@OneToOne(mappedBy = "bidding",cascade = { CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST,
			CascadeType.REFRESH }, fetch = FetchType.LAZY)
	//@JoinColumn(name ="assignedWorkId")
	//@PrimaryKeyJoinColumn
	private AssignedWork assignedWork;

	@ManyToOne(cascade = { CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST,
			CascadeType.REFRESH }, fetch = FetchType.LAZY)
	@JoinColumn(name = "WorkId")
	private Work work;


	// foreign key
	@ManyToOne( fetch = FetchType.LAZY, cascade = { CascadeType.DETACH, CascadeType.MERGE,
			CascadeType.PERSIST, CascadeType.REFRESH })
	@JoinColumn(name = "ContractorId")
	private Contractor contractor;

	@ManyToOne( fetch = FetchType.LAZY, cascade = { CascadeType.DETACH, CascadeType.MERGE,
			CascadeType.PERSIST, CascadeType.REFRESH })
	@JoinColumn(name = "LabourId")
	private Labour labour;

	public Bidding() {
		super();
		
	}

	public Bidding(int biddingId, String description, double amount, int duration, AssignedWork assignedWork, Work work,
			Contractor contractor, Labour labour) {
		super();
		this.biddingId = biddingId;
		this.description = description;
		this.amount = amount;
		this.duration = duration;
		this.assignedWork = assignedWork;
		this.work = work;
		this.contractor = contractor;
		this.labour = labour;
	}

	public int getBiddingId() {
		return biddingId;
	}

	public void setBiddingId(int biddingId) {
		this.biddingId = biddingId;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public double getAmount() {
		return amount;
	}

	public void setAmount(double amount) {
		this.amount = amount;
	}

	public int getDuration() {
		return duration;
	}

	public void setDuration(int duration) {
		this.duration = duration;
	}

	public AssignedWork getAssignedWork() {
		return assignedWork;
	}

	public void setAssignedWork(AssignedWork assignedWork) {
		this.assignedWork = assignedWork;
	}

	public Work getWork() {
		return work;
	}

	public void setWork(Work work) {
		this.work = work;
	}

	public Contractor getContractor() {
		return contractor;
	}

	public void setContractor(Contractor contractor) {
		this.contractor = contractor;
	}

	public Labour getLabour() {
		return labour;
	}

	public void setLabour(Labour labour) {
		this.labour = labour;
	}

	@Override
	public String toString() {
		return "Bidding [biddingId=" + biddingId + ", description=" + description + ", amount=" + amount + ", duration="
				+ duration + ", assignedWork=" + assignedWork + ", work=" + work + ", contractor=" + contractor
				+ ", labour=" + labour + "]";
	}

	
	
	
}
